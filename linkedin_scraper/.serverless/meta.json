{
  "/Users/akashanand/Job_Scraper/linkedin_scraper/serverless.yml": {
    "versionFramework": "4.20.2",
    "servicePath": "/Users/akashanand/Job_Scraper/linkedin_scraper/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "linkedin-job-scraper",
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "pythonBin": "python3",
          "dockerizePip": true,
          "slim": true,
          "strip": false
        }
      },
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-1",
        "stage": "dev",
        "timeout": 600,
        "memorySize": 1024,
        "deploymentBucket": "linkedin-job-scraper-deployment-bucket",
        "environment": {
          "LINKEDIN_EMAIL": "api.authenticate.user@gmail.com",
          "LINKEDIN_PASSWORD": "<REDACTED>",
          "JOBS_BUCKET": "linkedin-job-scraper-dev-jobs"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:PutObject",
                  "s3:DeleteObject",
                  "s3:CreateBucket",
                  "s3:ListBucket",
                  "s3:GetBucketLocation"
                ],
                "Resource": [
                  "arn:aws:s3:::linkedin-job-scraper-dev-jobs/*",
                  "arn:aws:s3:::linkedin-job-scraper-dev-jobs"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "ssm:GetParameter",
                  "ssm:PutParameter",
                  "ssm:DeleteParameter"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "events:DescribeRule",
                  "events:PutRule",
                  "events:DeleteRule",
                  "events:PutTargets",
                  "events:RemoveTargets",
                  "events:ListTargetsByRule"
                ],
                "Resource": "*"
              }
            ]
          }
        },
        "versionFunctions": true,
        "deploymentBucketObject": {
          "name": "linkedin-job-scraper-deployment-bucket",
          "serverSideEncryption": "AES256"
        }
      },
      "functions": {
        "api": {
          "handler": "lambda_handler.handler",
          "timeout": 600,
          "events": [
            {
              "http": {
                "path": "/{proxy+}",
                "method": "ANY",
                "cors": true,
                "integration": "lambda-proxy"
              }
            },
            {
              "http": {
                "path": "/",
                "method": "ANY",
                "cors": true,
                "integration": "lambda-proxy"
              }
            },
            {
              "schedule": {
                "rate": [
                  "rate(1 hour)"
                ],
                "input": {
                  "batch_number": 1,
                  "batch_size": 18
                }
              }
            },
            {
              "schedule": {
                "rate": [
                  "rate(1 hour)"
                ],
                "input": {
                  "batch_number": 2,
                  "batch_size": 18
                }
              }
            },
            {
              "schedule": {
                "rate": [
                  "rate(1 hour)"
                ],
                "input": {
                  "batch_number": 3,
                  "batch_size": 18
                }
              }
            },
            {
              "schedule": {
                "rate": [
                  "rate(1 hour)"
                ],
                "input": {
                  "batch_number": 4,
                  "batch_size": 18
                }
              }
            },
            {
              "schedule": {
                "rate": [
                  "rate(1 hour)"
                ],
                "input": {
                  "batch_number": 5,
                  "batch_size": 18
                }
              }
            },
            {
              "schedule": {
                "rate": [
                  "rate(1 hour)"
                ],
                "input": {
                  "batch_number": 6,
                  "batch_size": 18
                }
              }
            },
            {
              "schedule": {
                "rate": [
                  "rate(1 hour)"
                ],
                "input": {
                  "batch_number": 7,
                  "batch_size": 18
                }
              }
            }
          ],
          "name": "linkedin-job-scraper-dev-api"
        }
      },
      "resources": {
        "Resources": {
          "JobScraperBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "linkedin-job-scraper-dev-jobs",
              "PublicAccessBlockConfiguration": {
                "BlockPublicAcls": true,
                "BlockPublicPolicy": true,
                "IgnorePublicAcls": true,
                "RestrictPublicBuckets": true
              }
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "us-east-1",
      "stage": "dev",
      "timeout": 600,
      "memorySize": 1024,
      "deploymentBucket": "linkedin-job-scraper-deployment-bucket",
      "environment": {
        "LINKEDIN_EMAIL": "api.authenticate.user@gmail.com",
        "LINKEDIN_PASSWORD": "<REDACTED>",
        "JOBS_BUCKET": "linkedin-job-scraper-dev-jobs"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:CreateBucket",
                "s3:ListBucket",
                "s3:GetBucketLocation"
              ],
              "Resource": [
                "arn:aws:s3:::linkedin-job-scraper-dev-jobs/*",
                "arn:aws:s3:::linkedin-job-scraper-dev-jobs"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ssm:GetParameter",
                "ssm:PutParameter",
                "ssm:DeleteParameter"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "events:DescribeRule",
                "events:PutRule",
                "events:DeleteRule",
                "events:PutTargets",
                "events:RemoveTargets",
                "events:ListTargetsByRule"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "linkedin-job-scraper-deployment-bucket",
        "serverSideEncryption": "AES256"
      }
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: linkedin-job-scraper\n\nplugins:\n  - serverless-python-requirements\n\ncustom:\n  pythonRequirements:\n    pythonBin: python3\n    dockerizePip: true\n    slim: true\n    strip: false\n\nprovider:\n  name: aws\n  runtime: python3.9\n  region: us-east-1\n  stage: dev\n  timeout: 600  # 10 minutes Lambda timeout (scheduled runs unaffected by API limits)\n  memorySize: 1024  # 1GB memory\n  deploymentBucket:\n    name: linkedin-job-scraper-deployment-bucket\n    serverSideEncryption: AES256\n  environment:\n    LINKEDIN_EMAIL: ${env:LINKEDIN_EMAIL}\n    LINKEDIN_PASSWORD: ${env:LINKEDIN_PASSWORD}\n    JOBS_BUCKET: ${self:service}-${self:provider.stage}-jobs\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - s3:GetObject\n            - s3:PutObject\n            - s3:DeleteObject\n            - s3:CreateBucket\n            - s3:ListBucket\n            - s3:GetBucketLocation\n          Resource: \n            - \"arn:aws:s3:::${self:service}-${self:provider.stage}-jobs/*\"\n            - \"arn:aws:s3:::${self:service}-${self:provider.stage}-jobs\"\n        - Effect: Allow\n          Action:\n            - logs:CreateLogGroup\n            - logs:CreateLogStream\n            - logs:PutLogEvents\n          Resource: \"*\"\n        - Effect: Allow\n          Action:\n            - ssm:GetParameter\n            - ssm:PutParameter\n            - ssm:DeleteParameter\n          Resource: \"*\"\n        - Effect: Allow\n          Action:\n            - events:DescribeRule\n            - events:PutRule\n            - events:DeleteRule\n            - events:PutTargets\n            - events:RemoveTargets\n            - events:ListTargetsByRule\n          Resource: \"*\"\n\nfunctions:\n  api:\n    handler: lambda_handler.handler\n    timeout: 600  # Keep Lambda at 10 minutes; API integration will cap during testing\n    events:\n      - http:  # REST API (supports >30s once quota is approved)\n          path: /{proxy+}\n          method: ANY\n          cors: true\n          integration: lambda-proxy\n      - http:  # REST API root\n          path: /\n          method: ANY\n          cors: true\n          integration: lambda-proxy\n      # Main scraping every hour (all 7 batches) - accumulates data\n      - schedule:\n          rate: rate(1 hour)\n          input:\n            batch_number: 1\n            batch_size: 18\n      - schedule:\n          rate: rate(1 hour)\n          input:\n            batch_number: 2\n            batch_size: 18\n      - schedule:\n          rate: rate(1 hour)\n          input:\n            batch_number: 3\n            batch_size: 18\n      - schedule:\n          rate: rate(1 hour)\n          input:\n            batch_number: 4\n            batch_size: 18\n      - schedule:\n          rate: rate(1 hour)\n          input:\n            batch_number: 5\n            batch_size: 18\n      - schedule:\n          rate: rate(1 hour)\n          input:\n            batch_number: 6\n            batch_size: 18\n      - schedule:\n          rate: rate(1 hour)\n          input:\n            batch_number: 7\n            batch_size: 18\n\nresources:\n  Resources:\n    JobScraperBucket:\n      Type: AWS::S3::Bucket\n      Properties:\n        BucketName: ${self:service}-${self:provider.stage}-jobs\n        PublicAccessBlockConfiguration:\n          BlockPublicAcls: true\n          BlockPublicPolicy: true\n          IgnorePublicAcls: true\n          RestrictPublicBuckets: true",
    "command": [
      "invoke"
    ],
    "options": {
      "function": "api",
      "data": "{\"batch_number\": 1, \"batch_size\": 18}"
    },
    "orgId": "9e2ccff8-73d7-457b-8d55-623954de0272",
    "orgName": "akashapi",
    "userId": "SV9xc8cjv9tpDFyTnh",
    "userName": "akashapi",
    "serviceProviderAwsAccountId": "810774026207",
    "serviceProviderAwsCfStackName": "linkedin-job-scraper-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:810774026207:stack/linkedin-job-scraper-dev/3725c900-8eea-11f0-9a3d-0e5a5d8e6de1",
    "serviceProviderAwsCfStackCreated": "2025-09-11T08:35:04.852Z",
    "serviceProviderAwsCfStackUpdated": "2025-10-03T22:15:32.002Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:810774026207:function:linkedin-job-scraper-dev-api:23",
        "Description": "Current Lambda function version",
        "ExportName": "sls-linkedin-job-scraper-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://yp00307yne.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-linkedin-job-scraper-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "linkedin-job-scraper-deployment-bucket",
        "ExportName": "sls-linkedin-job-scraper-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}